fastqc Protiumkleinii_S1_L008_R1_001_fastq.gz

fastqc Protiumkleinii_S1_L008_R2_001.fastq.gz

#FASTQC results are in the local lab machine for now: /home/bioma/protium_2016/

#Once connected to the working station (see lab_book) then import the files from S3

s3cmd get s3://_path_of_file

nohup java -jar /usr/share/java/trimmomatic.jar PE -threads 6 -phred33 /home/ubuntu/breu_branco/Protiumkleinii_S1_L008_R1_001.fastq /home/ubuntu/breu_branco/Protiumkleinii_S1_L008_R2_001.fastq /home/ubuntu/breu_branco/Protiumkleinii_S1_L008.output2_forward_paired.fq /home/ubuntu/breu_branco/Protiumkleinii_S1_L008.output2_forward_unpaired.fq /home/ubuntu/breu_branco/Protiumkleinii_S1_L008.output2_reverse_paired.fq /home/ubuntu/breu_branco/Protiumkleinii_S1_L008.output_reverse_unpaired2.fq ILLUMINACLIP:/home/ubuntu/scripts/truseq.adapters.fasta:2:30:10 SLIDINGWINDOW:4:2 LEADING:10 TRAILING:10 CROP:101 HEADCROP:0 MINLEN:80 &

/home/ubuntu/scripts/seqtk/./seqtk sample -s100 Protiumkleinii_S1_L008.output2_forward_paired.fq 10000
/home/ubuntu/scripts/seqtk/./seqtk sample -s100 Protiumkleinii_S1_L008.output2_reverse_paired.fq 10000

nohup /home/ubuntu/scripts/bbmap/./khist.sh in1=/home/ubuntu/breu_branco/Protiumkleinii_S1_L008.output2_forward_paired.fq.10000 in2=/home/ubuntu/breu_branco/Protiumkleinii_S1_L008.output2_reverse_paired.fq.10000 khist=khist.txt peaks=peaks.txt -Xmx6g

nohup jellyfish count -m 31 -s 1G -C -o Protiumkleinii_S1_L008.output2_forward_reverse_paired.count -U 1000 -t 1 Protiumkleinii_S1_L008.output2_forward_paired.fq Protiumkleinii_S1_L008.output2_reverse_paired.fq


#sum(as.numeric(Protiumkleinii_S1_L008.output2_forward_reverse_paired.count_all[16:5000,1]*Protiumkleinii_S1_L008.output2_forward_reverse_paired.count_all[16:5000,2]))/34
#[1] 904294947

#nohup python /home/ubuntu/scripts/SPAdes-3.9.0-Linux/bin/dipspades.py --pe1-1 Protiumkleinii_S1_L008.output2_forward_paired.fq --pe1-2 Protiumkleinii_S1_L008.output2_reverse_paired.fq --expect-gaps --only-assembler --hap-assembly --memory 6 -o test1-protium

#teste 1 18-10
#nohup python /home/ubuntu/scripts/SPAdes-3.9.0-Linux/bin/dipspades.py -t 15 --pe1-1 Protiumkleinii_S1_L008.output2_forward_paired.fq --pe1-2 Protiumkleinii_S1_L008.output2_reverse_paired.fq --expect-gaps --only-assembler --disable-rr --memory 110 -o spades_protium
#stopped spades for now. It was taking too long. Now I'm running soap, as follows,

nohup /home/ubuntu/scripts/SOAPdenovo2/SOAPdenovo-63mer all -s config.txt -K 63 -R -p 15 -o graph_prefix 1>ass.log 2>ass.err

wget https://sourceforge.net/projects/bbmap/

#use stats.sh from the bbmap package to see assembly general stats.
/home/ubuntu/scripts/bbmap/./stats.sh graph_prefix.scafSeq

#as soap finished. I'm running spades again with the following command line:
#nohup python /home/ubuntu/scripts/SPAdes-3.9.0-Linux/bin/dipspades.py -t 15 --pe1-1 Protiumkleinii_S1_L008.output2_forward_paired.fq --pe1-2 Protiumkleinii_S1_L008.output2_reverse_paired.fq --expect-gaps --only-assembler --disable-rr --memory 110 -o spades_breubranco

#as local computer has only 4 cores, I've partitionated the soap scaffolds file in 3 to run augustus with xargs. It's running localy now.
perl /home/bioma/scripts/split_multifasta.pl --input_file=protium.graph_prefix.scafSeq --seqs_per_file=553403 --output_dir=./soap_parts
ls | grep -P "soap*" | xargs -I {} -P 3 bash -c "/home/bioma/scripts/augustus.2.5.5/bin/augustus --genemodel=complete --strand=both --noInFrameStop=true --gff3=on --uniqueGeneId=true --species=arabidopsis --protein=on --codingseq=on {} > {}.complete.gff"

cat soap.2.fsa.complete.gff soap.3.fsa.complete.gff soap.1.fsa.complete.gff > soap.all.fsa.complete.gff
/home/bioma/scripts/augustus.2.5.5/scripts/getAnnoFasta.pl soap.all.fsa.complete.gff --seqfile=/home/bioma/protium_2016/protium.graph_prefix.scafSeq



bowtie2-build Breu_branco.soap1.scafSeq Breu_branco.soap1.scafSeq.bowtie2
nohup bowtie2 -x /home/ubuntu/breu_branco/Breu_branco.soap1.scafSeq.bowtie2 -p 16 --local --no-unal -1 /home/ubuntu/breu_branco/Protiumkleinii_S1_L008.output2_forward_paired.fq /home/ubuntu/breu_branco/Protiumkleinii_S1_L008.output2_reverse_paired.fq -S /home/ubuntu/breu_branco/Protiumkleinii_S1_S2_soap1.sam


nohup java -jar /usr/share/java/trimmomatic.jar SE -threads 6 -phred33 /home/ubuntu/breu_branco/GBS-MR3_S1_L008_R1_001.fastq.gz /home/ubuntu/breu_branco/GBS-MR3_S1_L008_R1_001.out.fastq HEADCROP:10 MINLEN:80 &

nohup java -jar /usr/share/java/trimmomatic.jar PE -threads 30 -phred33 GBS-MR3_S1_L008_R1_001.fastq.gz GBS-MR3_S1_L008_R2_001.fastq.gz GBS-MR3_S1_L008_R1_001.forward_paired.fastq.gz GBS-MR3_S1_L008_R1_001.forward_unpaired.fastq.gz GBS-MR3_S1_L008_R2_001.fastq.reverse.paired.gz GBS-MR3_S1_L008_R2_001.fastq.reverse.unpaired.gz ILLUMINACLIP:/home/ubuntu/breu_branco/barcodes:2:30:10 LEADING:10 TRAILING:10 SLIDINGWINDOW:4:2 MINLEN:65
nohup bowtie2 -x /home/ubuntu/breu_branco/Breu_branco.soap1.scafSeq.bowtie2 -p 30 --no-unal -1 /home/ubuntu/breu_branco/trimmomatic_paired/GBS-MR3_S1_L008_R1_001.forward_paired.fastq.gz -2 /home/ubuntu/breu_branco/trimmomatic_paired/GBS-MR3_S1_L008_R2_001.fastq.reverse.paired.gz -S /home/ubuntu/breu_branco/GBS-MR3_S1_L008_R1_R2.trimmed.SOAP.sam

#aligment of RAD-seq to soap draft genome and convertion to bam.
nohup samtools view -@ 30 -Sb GBS-MR3_S1_L008_R1_R2.trimmed.SOAP.sam > GBS-MR3_S1_L008_R1_R2.trimmed.SOAP.bam
